"""
–ü—Ä–æ—Å—Ç–æ–π –ø—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è requests-ai-validator
"""

import os
import requests_ai_validator as requests
from pydantic import BaseModel

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–∏–ª–∏ .env —Ñ–∞–π–ª)
os.environ['AI_PROVIDER'] = 'openai'
os.environ['AI_TOKEN'] = 'your-openai-api-key'


class UserModel(BaseModel):
    id: int
    name: str
    email: str


def example_basic_usage():
    """–ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ"""
    print("üéØ –ë–ê–ó–û–í–û–ï –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï")
    print("=" * 40)
    
    # –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å (–∫–∞–∫ –≤—Å–µ–≥–¥–∞)
    response = requests.get("https://jsonplaceholder.typicode.com/users/1")
    print(f"üì° –û–±—ã—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å: {response.status_code}")
    
    # –° AI –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π (–¥–æ–±–∞–≤–∏–ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã)
    response = requests.get(
        "https://jsonplaceholder.typicode.com/users/2",
        ai_validation=True,
        ai_schema=UserModel
    )
    print(f"ü§ñ –° AI –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π: {response.status_code}")
    print("‚úÖ AI –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞!")


def example_post_request():
    """–ü—Ä–∏–º–µ—Ä POST –∑–∞–ø—Ä–æ—Å–∞"""
    print("\nüéØ POST –ó–ê–ü–†–û–° –° AI –í–ê–õ–ò–î–ê–¶–ò–ï–ô")
    print("=" * 40)
    
    user_data = {
        "name": "John Doe",
        "email": "john@example.com"
    }
    
    response = requests.post(
        "https://jsonplaceholder.typicode.com/posts",
        json=user_data,
        ai_validation=True,
        ai_schema=UserModel,
        ai_rules=["–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω"]
    )
    print(f"üì§ POST —Å AI –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π: {response.status_code}")


def example_session_usage():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å Session"""
    print("\nüéØ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï –° SESSION")
    print("=" * 40)
    
    # –°–æ–∑–¥–∞–µ–º session —Å AI
    session = requests.Session(ai_provider="openai")
    
    response = session.get(
        "https://jsonplaceholder.typicode.com/users/3",
        ai_validation=True,
        ai_schema=UserModel
    )
    print(f"üîß Session —Å AI: {response.status_code}")


def main():
    print("üöÄ REQUESTS-AI-VALIDATOR - –ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø")
    print("=" * 60)
    
    try:
        example_basic_usage()
        example_post_request()
        example_session_usage()
        
        print("\nüéâ –í–°–ï –ü–†–ò–ú–ï–†–´ –í–´–ü–û–õ–ù–ï–ù–´!")
        print("=" * 60)
        print("üìã –ß–¢–û –ù–£–ñ–ù–û:")
        print("1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: pip install requests-ai-validator")
        print("2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Å AI_TOKEN")
        print("3. –ó–∞–º–µ–Ω–∏—Ç—å import requests")
        print("4. –î–æ–±–∞–≤–∏—Ç—å ai_validation=True –≥–¥–µ –Ω—É–∂–Ω–æ")
        print("5. –ì–æ—Ç–æ–≤–æ!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        print("\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("- –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω AI_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("- –í—ã–±—Ä–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π AI_PROVIDER")
        print("- –ï—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –¥–ª—è AI API")


if __name__ == "__main__":
    main()